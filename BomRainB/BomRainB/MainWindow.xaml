<Window x:Class="BomRainB.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:converters="clr-namespace:BomRainB.Views.Converters"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:BomRainB"
        mc:Ignorable="d"
        Title="RainBird - BOM Checker" 
        Icon="favicon.ico"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        Background="#E0F2F1"
        FontFamily="{StaticResource MaterialDesignFont}"
        Height="768" MinHeight="768"
        Width="1366" MinWidth="1366">
    
    <Window.Resources>
        <ResourceDictionary>
            <converters:SideBarWidthConverter x:Key="SideBarWidthConverter"/>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    
  
    <!-- clase que se utiliza como base para colocar elementos -->
    <materialDesign:DialogHost Identifier="RootDialog">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding IsChecked, ElementName=MenuToggleButton, Converter={StaticResource SideBarWidthConverter}}"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <materialDesign:ColorZone Background="#00695C"
                                      materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <StackPanel>
                    <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                        <ToggleButton Width="48" Height="48" x:Name="MenuToggleButton" IsChecked="False">
                            <materialDesign:PackIcon Kind="Menu" Width="22" Height="22"
                                                     Margin="13" Foreground="White"/>
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Name="Border" Background="Transparent">
                                        <ContentPresenter/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#00BFA5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                    </StackPanel>

                    <ListBox ItemsSource="{Binding SideBarItems, Mode=OneTime}" PreviewMouseLeftButtonUp="ItemsControlClicked"
                             HorizontalContentAlignment="Stretch" x:Name="MenuList" SelectedIndex="0" IsEnabled="{Binding CanAccess}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="13" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <materialDesign:PackIcon Kind="{Binding Icon, Mode=OneTime}" Width="22" Height="22"/>
                                    <TextBlock Text="{Binding Text, Mode=OneTime}" Style="{StaticResource MaterialDesignSubheadingTextBlock}"
                                               VerticalAlignment="Center" Margin="13,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <!-- cada elemento dentro del listbox -->
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Height" Value="48"/>
                                <Setter Property="ToolTip" Value="{Binding Text}"/>
                                <Setter Property="Visibility" Value="{Binding Command.CanAccess, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border Name="Border" Background="Transparent">
                                                <ContentPresenter/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="#009688"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="#00BFA5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </StackPanel>
            </materialDesign:ColorZone>
            
            <!-- Content Control for Views -->
            <ContentControl Content="{Binding CurrentView, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            FocusVisualStyle="{x:Null}" x:Name="View" Grid.Column="1"/>
            
            
        </Grid>
    </materialDesign:DialogHost>
    
</Window>
